{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\AI_Memory_Augmentation\\\\frontend\\\\src\\\\MemorySearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MemorySearch() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState([]);\n  const searchMemories = async () => {\n    const response = await axios.get(`/search?query=${query}`);\n    setResults(response.data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: query,\n      onChange: e => setQuery(e.target.value),\n      placeholder: \"Search memories...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: searchMemories,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: results.map((r, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: r.transcript\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this), r.keyframes.map((frame, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:5000/${frame}`,\n          alt: \"frame\",\n          width: 100\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 56\n        }, this))]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n_s(MemorySearch, \"kZM7FOZerLi1RvZykWYa8gktm94=\");\n_c = MemorySearch;\nexport default MemorySearch;\nvar _c;\n$RefreshReg$(_c, \"MemorySearch\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","MemorySearch","_s","query","setQuery","results","setResults","searchMemories","response","get","data","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","r","index","transcript","keyframes","frame","i","src","alt","width","_c","$RefreshReg$"],"sources":["C:/Users/Asus/AI_Memory_Augmentation/frontend/src/MemorySearch.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from './api';\r\n\r\nfunction MemorySearch() {\r\n    const [query, setQuery] = useState('');\r\n    const [results, setResults] = useState([]);\r\n\r\n    const searchMemories = async () => {\r\n        const response = await axios.get(`/search?query=${query}`);\r\n        setResults(response.data);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"text\" value={query} onChange={(e) => setQuery(e.target.value)} placeholder=\"Search memories...\" />\r\n            <button onClick={searchMemories}>Search</button>\r\n            <ul>\r\n                {results.map((r, index) => (\r\n                    <li key={index}>\r\n                        <p>{r.transcript}</p>\r\n                        {r.keyframes.map((frame, i) => <img key={i} src={`http://localhost:5000/${frame}`} alt=\"frame\" width={100} />)}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MemorySearch;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMU,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,iBAAiBN,KAAK,EAAE,CAAC;IAC1DG,UAAU,CAACE,QAAQ,CAACE,IAAI,CAAC;EAC7B,CAAC;EAED,oBACIV,OAAA;IAAAW,QAAA,gBACIX,OAAA;MAAOY,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEV,KAAM;MAACW,QAAQ,EAAGC,CAAC,IAAKX,QAAQ,CAACW,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAACI,WAAW,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/GrB,OAAA;MAAQsB,OAAO,EAAEf,cAAe;MAAAI,QAAA,EAAC;IAAM;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChDrB,OAAA;MAAAW,QAAA,EACKN,OAAO,CAACkB,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBAClBzB,OAAA;QAAAW,QAAA,gBACIX,OAAA;UAAAW,QAAA,EAAIa,CAAC,CAACE;QAAU;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACpBG,CAAC,CAACG,SAAS,CAACJ,GAAG,CAAC,CAACK,KAAK,EAAEC,CAAC,kBAAK7B,OAAA;UAAa8B,GAAG,EAAE,yBAAyBF,KAAK,EAAG;UAACG,GAAG,EAAC,OAAO;UAACC,KAAK,EAAE;QAAI,GAAjEH,CAAC;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAkE,CAAC,CAAC;MAAA,GAFzGI,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AAACnB,EAAA,CAvBQD,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAyBrB,eAAeA,YAAY;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}