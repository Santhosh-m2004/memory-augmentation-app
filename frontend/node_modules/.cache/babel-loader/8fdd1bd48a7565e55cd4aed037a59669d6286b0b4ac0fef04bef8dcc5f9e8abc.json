{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\AI_Memory_Augmentation\\\\frontend\\\\src\\\\MemorySearch.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { searchMemory, getAllMemories, deleteMemory } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MemorySearch({\n  refresh\n}) {\n  _s();\n  const [query, setQuery] = useState('');\n  const [memories, setMemories] = useState([]);\n  const fetchMemories = async () => {\n    const data = await getAllMemories();\n    setMemories(data);\n  };\n  useEffect(() => {\n    fetchMemories();\n  }, [refresh]);\n  const handleSearch = async () => {\n    const data = await searchMemory(query);\n    setMemories(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Search by title or transcript...\",\n      onChange: e => setQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: memories.map(memory => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: memory.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: memory.transcript\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), memory.keyframes.map((url, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: url,\n          alt: `Frame ${index}`,\n          width: \"100\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            deleteMemory(memory._id);\n            fetchMemories();\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this)]\n      }, memory._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(MemorySearch, \"Y8+S5mNm1dxhWPLM+L1TN7ErDsc=\");\n_c = MemorySearch;\nexport default MemorySearch;\nvar _c;\n$RefreshReg$(_c, \"MemorySearch\");","map":{"version":3,"names":["React","useEffect","useState","searchMemory","getAllMemories","deleteMemory","jsxDEV","_jsxDEV","MemorySearch","refresh","_s","query","setQuery","memories","setMemories","fetchMemories","data","handleSearch","children","placeholder","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","memory","title","transcript","keyframes","url","index","src","alt","width","_id","_c","$RefreshReg$"],"sources":["C:/Users/Asus/AI_Memory_Augmentation/frontend/src/MemorySearch.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { searchMemory, getAllMemories, deleteMemory } from './api';\r\n\r\nfunction MemorySearch({ refresh }) {\r\n    const [query, setQuery] = useState('');\r\n    const [memories, setMemories] = useState([]);\r\n\r\n    const fetchMemories = async () => {\r\n        const data = await getAllMemories();\r\n        setMemories(data);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchMemories();\r\n    }, [refresh]);\r\n\r\n    const handleSearch = async () => {\r\n        const data = await searchMemory(query);\r\n        setMemories(data);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input placeholder=\"Search by title or transcript...\" onChange={(e) => setQuery(e.target.value)} />\r\n            <button onClick={handleSearch}>Search</button>\r\n            <ul>\r\n                {memories.map(memory => (\r\n                    <li key={memory._id}>\r\n                        <h3>{memory.title}</h3>\r\n                        <p>{memory.transcript}</p>\r\n                        {memory.keyframes.map((url, index) => (\r\n                            <img key={index} src={url} alt={`Frame ${index}`} width=\"100\" />\r\n                        ))}\r\n                        <button onClick={() => { deleteMemory(memory._id); fetchMemories(); }}>Delete</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MemorySearch;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,EAAEC,cAAc,EAAEC,YAAY,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,SAASC,YAAYA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMa,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMC,IAAI,GAAG,MAAMZ,cAAc,CAAC,CAAC;IACnCU,WAAW,CAACE,IAAI,CAAC;EACrB,CAAC;EAEDf,SAAS,CAAC,MAAM;IACZc,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,CAACN,OAAO,CAAC,CAAC;EAEb,MAAMQ,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMD,IAAI,GAAG,MAAMb,YAAY,CAACQ,KAAK,CAAC;IACtCG,WAAW,CAACE,IAAI,CAAC;EACrB,CAAC;EAED,oBACIT,OAAA;IAAAW,QAAA,gBACIX,OAAA;MAAOY,WAAW,EAAC,kCAAkC;MAACC,QAAQ,EAAGC,CAAC,IAAKT,QAAQ,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnGpB,OAAA;MAAQqB,OAAO,EAAEX,YAAa;MAAAC,QAAA,EAAC;IAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9CpB,OAAA;MAAAW,QAAA,EACKL,QAAQ,CAACgB,GAAG,CAACC,MAAM,iBAChBvB,OAAA;QAAAW,QAAA,gBACIX,OAAA;UAAAW,QAAA,EAAKY,MAAM,CAACC;QAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvBpB,OAAA;UAAAW,QAAA,EAAIY,MAAM,CAACE;QAAU;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACzBG,MAAM,CAACG,SAAS,CAACJ,GAAG,CAAC,CAACK,GAAG,EAAEC,KAAK,kBAC7B5B,OAAA;UAAiB6B,GAAG,EAAEF,GAAI;UAACG,GAAG,EAAE,SAASF,KAAK,EAAG;UAACG,KAAK,EAAC;QAAK,GAAnDH,KAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAgD,CAClE,CAAC,eACFpB,OAAA;UAAQqB,OAAO,EAAEA,CAAA,KAAM;YAAEvB,YAAY,CAACyB,MAAM,CAACS,GAAG,CAAC;YAAExB,aAAa,CAAC,CAAC;UAAE,CAAE;UAAAG,QAAA,EAAC;QAAM;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GANjFG,MAAM,CAACS,GAAG;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOf,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AAACjB,EAAA,CApCQF,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAsCrB,eAAeA,YAAY;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}