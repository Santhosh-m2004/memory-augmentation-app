{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\AI_Memory_Augmentation\\\\AI_Memory_Augmentation\\\\frontend\\\\src\\\\MemorySearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { searchMemory, getAllMemories, deleteMemory } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MemorySearch() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [memories, setMemories] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const handleSearch = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const results = await searchMemory(query);\n      setMemories(results);\n    } catch (err) {\n      setError('Failed to search memories.');\n    }\n    setLoading(false);\n  };\n  const loadAllMemories = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const allMemories = await getAllMemories();\n      setMemories(allMemories);\n    } catch (err) {\n      setError('Failed to load memories.');\n    }\n    setLoading(false);\n  };\n  const handleDelete = async id => {\n    setLoading(true);\n    setError('');\n    try {\n      const response = await deleteMemory(id);\n      if (response.error) {\n        setError(response.error);\n      } else {\n        loadAllMemories(); // refresh list\n      }\n    } catch (err) {\n      setError('Failed to delete memory.');\n    }\n    setLoading(false);\n  };\n  useEffect(() => {\n    loadAllMemories();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search Memories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: query,\n      onChange: e => setQuery(e.target.value),\n      placeholder: \"Search by transcript...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loadAllMemories,\n      children: \"View All Memories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: memories.map(memory => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Transcript:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 28\n          }, this), \" \", memory.transcript]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Frames:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '5px',\n            flexWrap: 'wrap'\n          },\n          children: memory.keyframes.map((frame, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: frame,\n            alt: `frame ${index}`,\n            width: \"100\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(memory._id),\n          children: \"Delete Memory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this)]\n      }, memory._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(MemorySearch, \"9WbXcRMbkOkglY+1TEl9jXftt+E=\");\n_c = MemorySearch;\nexport default MemorySearch;\nvar _c;\n$RefreshReg$(_c, \"MemorySearch\");","map":{"version":3,"names":["React","useState","useEffect","searchMemory","getAllMemories","deleteMemory","jsxDEV","_jsxDEV","MemorySearch","_s","query","setQuery","memories","setMemories","loading","setLoading","error","setError","handleSearch","results","err","loadAllMemories","allMemories","handleDelete","id","response","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","style","color","map","memory","transcript","display","gap","flexWrap","keyframes","frame","index","src","alt","width","_id","_c","$RefreshReg$"],"sources":["C:/Users/Asus/AI_Memory_Augmentation/AI_Memory_Augmentation/frontend/src/MemorySearch.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { searchMemory, getAllMemories, deleteMemory } from './api';\r\n\r\nfunction MemorySearch() {\r\n    const [query, setQuery] = useState('');\r\n    const [memories, setMemories] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSearch = async () => {\r\n        setLoading(true);\r\n        setError('');\r\n        try {\r\n            const results = await searchMemory(query);\r\n            setMemories(results);\r\n        } catch (err) {\r\n            setError('Failed to search memories.');\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    const loadAllMemories = async () => {\r\n        setLoading(true);\r\n        setError('');\r\n        try {\r\n            const allMemories = await getAllMemories();\r\n            setMemories(allMemories);\r\n        } catch (err) {\r\n            setError('Failed to load memories.');\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    const handleDelete = async (id) => {\r\n        setLoading(true);\r\n        setError('');\r\n        try {\r\n            const response = await deleteMemory(id);\r\n            if (response.error) {\r\n                setError(response.error);\r\n            } else {\r\n                loadAllMemories(); // refresh list\r\n            }\r\n        } catch (err) {\r\n            setError('Failed to delete memory.');\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadAllMemories();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Search Memories</h2>\r\n            <input\r\n                type=\"text\"\r\n                value={query}\r\n                onChange={(e) => setQuery(e.target.value)}\r\n                placeholder=\"Search by transcript...\"\r\n            />\r\n            <button onClick={handleSearch}>Search</button>\r\n            <button onClick={loadAllMemories}>View All Memories</button>\r\n\r\n            {loading && <p>Loading...</p>}\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n            <ul>\r\n                {memories.map(memory => (\r\n                    <li key={memory._id}>\r\n                        <p><strong>Transcript:</strong> {memory.transcript}</p>\r\n                        <p><strong>Frames:</strong></p>\r\n                        <div style={{ display: 'flex', gap: '5px', flexWrap: 'wrap' }}>\r\n                            {memory.keyframes.map((frame, index) => (\r\n                                <img key={index} src={frame} alt={`frame ${index}`} width=\"100\" />\r\n                            ))}\r\n                        </div>\r\n                        <button onClick={() => handleDelete(memory._id)}>Delete Memory</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MemorySearch;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}